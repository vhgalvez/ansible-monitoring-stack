---
# playbook/01_install_monitoring_stack.yml
# Instalación completa y mantenible de Prometheus + Grafana con Helm y configuración persistente

- name: 🧱 Instalar stack de monitoreo (Prometheus + Grafana)
  hosts: controller
  become: true
  gather_facts: false
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

  vars:
    kubeconfig_path: "/home/victory/.kube/config"

    # Configuración Prometheus
    prometheus_container_port: 9091
    prometheus_service_port: 9091
    prometheus_storage_class: "longhorn"
    prometheus_pvc_size: "8Gi"
    prometheus_chart_version: "27.9.0"
    prometheus_service_type: "ClusterIP"

    # Configuración Grafana
    grafana_container_port: 3000
    grafana_service_port: 3000
    grafana_storage_class: "longhorn"
    grafana_pvc_size: "5Gi"
    grafana_admin_user: "admin"
    grafana_admin_password: "admin123"
    grafana_chart_version: "8.12.1"
    grafana_service_type: "ClusterIP"

  tasks:
    - name: 📁 Crear namespace 'monitoring' si no existe
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        validate_certs: false
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring

    - name: 🔗 Añadir y actualizar repositorios Helm
      block:
        - name: Añadir repo Prometheus
          command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          register: prometheus_repo
          failed_when: prometheus_repo.rc != 0 and "exists" not in prometheus_repo.stderr
          changed_when: "'has been added' in prometheus_repo.stdout"

        - name: Añadir repo Grafana
          command: helm repo add grafana https://grafana.github.io/helm-charts
          register: grafana_repo
          failed_when: grafana_repo.rc != 0 and "exists" not in grafana_repo.stderr
          changed_when: "'has been added' in grafana_repo.stdout"

        - name: 🔄 Actualizar repos Helm
          command: helm repo update

    - name: 📄 Renderizar archivo values de Prometheus
      template:
        src: helm/prometheus/values-prometheus.yaml.j2
        dest: /tmp/values-prometheus.yaml

    - name: 🛡️ Crear Secret con extraScrapeConfigs para Prometheus
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        namespace: monitoring
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: prometheus-additional-scrape-configs
          data:
            extraScrapeConfigs.yaml: "{{ lookup('template', 'playbook/templates/node_exporter/extraScrapeConfigs.yaml.j2') | b64encode }}"
          type: Opaque

    - name: 🚀 Instalar Prometheus con Helm
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: monitoring
        chart_version: "{{ prometheus_chart_version }}"
        create_namespace: false
        values_files:
          - /tmp/values-prometheus.yaml
        state: present

    - name: 📄 Renderizar archivo values de Grafana
      template:
        src: helm/grafana/values-grafana.yaml.j2
        dest: /tmp/values-grafana.yaml

    - name: 🚀 Instalar Grafana con Helm
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: grafana
        chart_ref: grafana/grafana
        release_namespace: monitoring
        chart_version: "{{ grafana_chart_version }}"
        create_namespace: false
        values_files:
          - /tmp/values-grafana.yaml
        state: present

    - name: ✅ Confirmación final
      debug:
        msg: "✅ Prometheus y Grafana instalados correctamente con Helm y almacenamiento persistente."