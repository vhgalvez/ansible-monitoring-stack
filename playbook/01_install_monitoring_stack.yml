# playbook/01_install_monitoring_stack.yml
- name: 🧱 Instalar stack de monitoreo (Prometheus + Grafana)
  hosts: controller
  become: true
  gather_facts: false
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
    KUBECONFIG: "/home/victory/.kube/config"

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    prometheus_chart_version: "27.11.0"
    prometheus_values_path: "/tmp/values-prometheus.yaml"
    grafana_chart_version: "8.12.1"
    grafana_values_path: "/tmp/values-grafana.yaml"
    grafana_admin_user: "admin"
    grafana_admin_password: "123456"
    grafana_storage_class: "longhorn"
    grafana_pvc_size: "5Gi"

  tasks:
    - name: ✅ Verificar que kubectl está disponible
      command: "/usr/local/bin/kubectl version --client"
      register: kubectl_check
      failed_when: kubectl_check.rc != 0
      changed_when: false

    - name: 📁 Verificar si namespace 'monitoring' existe
      command: kubectl get namespace monitoring
      register: monitoring_namespace
      failed_when: false
      changed_when: false

    - name: 📁 Crear namespace 'monitoring' si no existe
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring
      when: monitoring_namespace.rc != 0

    - name: 🔗 Configurar repositorios Helm
      block:
        - name: Añadir repo Prometheus
          command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          register: prometheus_repo
          failed_when: prometheus_repo.rc != 0 and "exists" not in prometheus_repo.stderr
          changed_when: false

        - name: Añadir repo Grafana
          command: helm repo add grafana https://grafana.github.io/helm-charts
          register: grafana_repo
          failed_when: grafana_repo.rc != 0 and "exists" not in grafana_repo.stderr
          changed_when: false

        - name: 🔄 Actualizar repos Helm
          command: helm repo update
          changed_when: false

    - name: 📄 Renderizar valores de Prometheus
      template:
        src: helm/prometheus/values-prometheus.yaml.j2
        dest: "{{ prometheus_values_path }}"

    - name: 🚀 Desplegar Prometheus con Helm
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: monitoring
        chart_version: "{{ prometheus_chart_version }}"
        create_namespace: false
        values_files:
          - "{{ prometheus_values_path }}"
        state: present

    - name: 📄 Renderizar valores de Grafana
      template:
        src: helm/grafana/values-grafana.yaml.j2
        dest: "{{ grafana_values_path }}"

    - name: 🚀 Desplegar Grafana con Helm
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        name: grafana
        chart_ref: grafana/grafana
        release_namespace: monitoring
        chart_version: "{{ grafana_chart_version }}"
        create_namespace: false
        values_files:
          - "{{ grafana_values_path }}"
        state: present

    - name: 📆 Esperar a que los pods estén listos
      shell: kubectl get pods -n monitoring
      register: pod_status
      retries: 10
      delay: 6
      until: pod_status.rc == 0
      changed_when: false

    - name: 🔍 Mostrar estado de los pods
      debug:
        var: pod_status.stdout_lines

    - name: ✅ Confirmación final
      debug:
        msg: "✅ Stack Prometheus + Grafana desplegado con éxito."