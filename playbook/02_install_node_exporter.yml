# playbook\02_install_node_exporter.yml
---
# 📦 Instalación y configuración de Node Exporter en máquinas externas para Prometheus

- name: 🐧 Instalar y configurar Node Exporter
  hosts: external_node_exporter
  become: true
  gather_facts: true

  vars_files:
    - ../vars/main.yml

  vars:
    node_exporter_version: "1.9.1" # Versión de Node Exporter que vamos a instalar
    node_exporter_port: 9100 # Puerto en el que escuchará Node Exporter
    node_exporter_bin_dir: "/usr/local/bin" # Directorio donde se copiará el binario de Node Exporter
    node_exporter_user: "node_exporter" # Usuario para ejecutar el servicio
    node_exporter_service_path: "/etc/systemd/system/node_exporter.service" # Ruta para el archivo de servicio systemd

  tasks:
    - name: 📦 Asegurar que 'curl' esté instalado
      package:
        name: curl
        state: present

    - name: 👤 Crear usuario 'node_exporter' si no existe
      user:
        name: "{{ node_exporter_user }}"
        shell: /usr/sbin/nologin
        system: true
        create_home: false

    - name: 🧹 Limpiar carpeta temporal anterior si existe
      file:
        path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"
        state: absent

    - name: 📥 Descargar Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter.tar.gz"
        mode: "0644"

    - name: 📂 Extraer Node Exporter en /tmp
      unarchive:
        src: "/tmp/node_exporter.tar.gz"
        dest: "/tmp/"
        remote_src: true

    - name: 🚀 Copiar binario a {{ node_exporter_bin_dir }}
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: "{{ node_exporter_bin_dir }}/node_exporter"
        mode: "0755"
        remote_src: true

    - name: 🧩 Crear archivo systemd para Node Exporter
      template:
        src: "templates/node_exporter/node_exporter.service.j2"
        dest: "{{ node_exporter_service_path }}"
        mode: "0644"

    - name: ✅ Habilitar e iniciar Node Exporter
      systemd:
        name: node_exporter
        enabled: true
        state: started
        daemon_reload: true

    - name: 📊 Verificar puerto {{ node_exporter_port }} está disponible
      wait_for:
        host: "{{ inventory_hostname }}"
        port: "{{ node_exporter_port }}"
        state: started
        timeout: 30

    - name: 🔍 Resultado del escaneo del puerto
      debug:
        msg: "✅ Node Exporter está escuchando en el puerto {{ node_exporter_port }}"