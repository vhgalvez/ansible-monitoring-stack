# playbook\03_generate-monitoring-auth-secrets.yml
---
- name: 🔐 Generar y sellar los Secrets basic-auth (Prometheus + Grafana)
  hosts: localhost
  gather_facts: false
  become: false

  vars_files:
    - ../vars/main.yml

  vars:
    files_dir: "{{ playbook_dir }}/files"
    basic_auth_template: "secret/basic-auth-secret.yaml.j2"
    secrets:
      - name: prometheus
        user: "{{ prometheus_auth_user }}"
        pass: "{{ prometheus_auth_pass }}"
        secret_name: "{{ prometheus_secret_name }}"
        sealed_path: "{{ files_dir }}/prometheus-dashboard-sealed.yaml"
        unsealed_path: "{{ files_dir }}/prometheus-dashboard-unsealed.yaml"
      - name: grafana
        user: "{{ grafana_auth_user }}"
        pass: "{{ grafana_auth_pass }}"
        secret_name: "{{ grafana_secret_name }}"
        sealed_path: "{{ files_dir }}/grafana-dashboard-sealed.yaml"
        unsealed_path: "{{ files_dir }}/grafana-dashboard-unsealed.yaml"

  tasks:
    - name: 📋 Verificar que kubeseal esté instalado
      stat:
        path: "{{ kubeseal_path }}"
      register: kubeseal_check

    - name: ❌ Abortamos si kubeseal no está
      fail:
        msg: "❌ kubeseal no está instalado en {{ kubeseal_path }}."
      when: not kubeseal_check.stat.exists

    - name: 📋 Verificar que htpasswd esté disponible
      command: which htpasswd
      register: htpasswd_check
      failed_when: htpasswd_check.rc != 0
      changed_when: false

    - name: 🛑 Abortamos si faltan credenciales básicas
      fail:
        msg: "❌ Faltan variables grafana_auth_* o prometheus_auth_*"
      when: >
        grafana_auth_user | default('') | length == 0 or
        grafana_auth_pass | default('') | length == 0 or
        prometheus_auth_user | default('') | length == 0 or
        prometheus_auth_pass | default('') | length == 0

    - name: ✅ Verificar que monitoring_namespace está definido
      assert:
        that:
          - monitoring_namespace is defined
          - monitoring_namespace | length > 0
        fail_msg: "❌ La variable 'monitoring_namespace' no está definida o está vacía."

    - name: 📂 Crear carpeta para archivos secretos
      file:
        path: "{{ files_dir }}"
        state: directory
        mode: "0700"

    - name: 🔁 Generar, sellar y aplicar Secret por servicio
      include_tasks: tasks/generate_sealed_secret_inline.yml
      loop: "{{ secrets }}"
      loop_control:
        label: "{{ item.name }}"

    - name: 📄 Renderizar Middlewares basicAuth (Prometheus + Grafana)
      template:
        src: "secret/dashboard_middleware.yaml.j2"
        dest: "{{ files_dir }}/{{ item.name }}-middleware.yaml"
      loop: "{{ servicios_auth }}"
      loop_control:
        label: "{{ item.name }}"

    - name: 🚀 Aplicar Middlewares basicAuth con kubectl
      command: >
        {{ kubectl_path }} --kubeconfig {{ kubeconfig_path }} apply -f {{ files_dir }}/{{ item.name }}-middleware.yaml
      loop: "{{ servicios_auth }}"
      loop_control:
        label: "{{ item.name }}"
      changed_when: false