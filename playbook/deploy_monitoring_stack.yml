# playbook/deploy_monitoring_stack.yml
---
- name: 🧩 Cargar variables de configuración desde main.yml
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Cargar variables de configuración
      debug:
        msg: "Variables cargadas correctamente desde vars/main.yml"

- name: Copy tls secrets
  import_playbook: 00_copy_tls_secret.yml

- name: Instalar stack de monitoreo (Prometheus + Grafana)
  import_playbook: 01_install_monitoring_stack.yml

- name: Instalar Node Exporter en máquinas externas (si aplica)
  import_playbook: 02_install_node_exporter.yml

- name: Generar y sellar los Secrets de autenticación básica para Prometheus y Grafana
  import_playbook: 03_generate-monitoring-auth-secrets.yml

- name: Verificación final del despliegue de Prometheus y Grafana
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../vars/main.yml

  tasks:
    - name: ⏳ Esperar a que Prometheus y Grafana estén Ready
      retries: 20
      delay: 15
      until: >
        (
          pod_status.resources
          | json_query("[?status.phase=='Running' && length(status.containerStatuses[?ready==`false`])==`0`]
          | length
        ) >= 2
      changed_when: false
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        namespace: "{{ monitoring_namespace }}"
        kind: Pod
        label_selectors:
          - "app.kubernetes.io/instance in (grafana,prometheus)"
      register: pod_status

    - name: 🌐 Verificar acceso al dashboard de Grafana
      uri:
        url: "https://{{ grafana_domain }}"
        user: "{{ grafana_auth_user }}"
        password: "{{ grafana_auth_pass }}"
        validate_certs: false
        status_code: [200, 401, 302]
      register: grafana_status
      retries: 10
      delay: 5
      until: grafana_status.status in [200, 401, 302]


