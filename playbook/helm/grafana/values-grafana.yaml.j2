# helm/grafana/values-grafana.yaml.j2

adminUser: "{{ grafana_admin_user }}"
adminPassword: "{{ grafana_admin_password }}"

persistence:
  enabled: true
  storageClassName: "{{ grafana_storage_class }}"
  accessModes:
    - ReadWriteOnce
  size: "{{ grafana_pvc_size }}"

service:
  type: ClusterIP
  port: 3000
  targetPort: 3000

ingress:
  enabled: true
  ingressClassName: traefik
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: selfsigned
    traefik.ingress.kubernetes.io/auth-type: basic
    traefik.ingress.kubernetes.io/auth-secret: "{{ grafana_secret_name }}"  # Secret creado para la autenticaci칩n b치sica
    traefik.ingress.kubernetes.io/auth-header-field: Authorization
  hosts:
    - "grafana.{{ grafana_domain }}"  # Usa el dominio para Grafana
  tls:
    - secretName: "{{ tls_secret_name }}"  # Certificado TLS para Grafana
      hosts:
        - "grafana.{{ grafana_domain }}"  # Usa el dominio para Grafana

resources:
  requests:
    cpu: 100m
    memory: 512Mi
  limits:
    cpu: 200m
    memory: 1Gi

# Variables de personalizaci칩n
env:
  GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
  GF_SECURITY_ADMIN_USER: "{{ grafana_admin_user }}"

# Configuraci칩n adicional de Logs
logs:
  level: "info"

prometheus:
  server:
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        kubernetes.io/ingress.class: "traefik"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.tls.certresolver: "selfsigned"
        traefik.ingress.kubernetes.io/auth-type: "basic"
        traefik.ingress.kubernetes.io/auth-secret: "prometheus-basic-auth"
        traefik.ingress.kubernetes.io/auth-header-field: "Authorization"
      hosts:
        - "prometheus.{{ prometheus_domain }}"  # Usa el dominio para Prometheus
      tls:
        - secretName: "{{ tls_secret_name }}"  # Certificado TLS para Prometheus