# helm/grafana/values-grafana.yaml.j2

##################################################
# 🧑‍💻  Admin UI credentials
##################################################
adminUser: "{{ grafana_auth_user_ui }}"
adminPassword: "{{ grafana_auth_pass_ui }}"

##################################################
# 💾  PVC
##################################################
persistence:
  enabled: true
  storageClassName: "{{ grafana_storage_class }}"
  accessModes: [ReadWriteOnce]
  size: "{{ grafana_pvc_size }}"

##################################################
# 📡  Service
##################################################
service:
  type: ClusterIP
  port: 3000
  targetPort: 3000

##################################################
# 🌐  Kubernetes Ingress (Traefik)
##################################################
ingress:
  enabled: true
  ingressClassName: traefik
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: selfsigned
    # 🔑  enlace al Middleware “basicAuth”
    traefik.ingress.kubernetes.io/router.middlewares: "{{ monitoring_namespace }}-{{ grafana_dashboard_middleware_name }}@kubernetescrd"
  hosts:
    - "{{ grafana_domain }}"
  paths:
    - /
  pathType: Prefix
  tls:
    - secretName: "{{ tls_secret_name }}"
      hosts: [ "{{ grafana_domain }}" ]

##################################################
# 📊  Resources
##################################################
resources:
  requests: { cpu: 100m , memory: 512Mi }
  limits:   { cpu: 200m , memory: 1Gi }

##################################################
# ⚙️  Env
##################################################
env:
  GF_SECURITY_ADMIN_USER:     "{{ grafana_auth_user_ui }}"
  GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_auth_pass_ui }}"

##################################################
# 🩺  Probes
##################################################
readinessProbe:
  httpGet: { path: /api/health , port: 3000 }
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 10

livenessProbe:
  httpGet: { path: /api/health , port: 3000 }
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 10

##################################################
# 📋  Logs
##################################################
logs: { level: info }