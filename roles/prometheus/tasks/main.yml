# roles/prometheus/tasks/main.yml
---

- name: 📁 Asegurar que el namespace 'monitoring' existe
  kubernetes.core.k8s:
    kubeconfig: "/home/victory/.kube/config"
    validate_certs: false
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: monitoring

- name: 🔗 Añadir repositorio Helm prometheus-community
  ansible.builtin.command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"
  register: prometheus_repo
  failed_when: prometheus_repo.rc != 0 and "exists" not in prometheus_repo.stderr
  changed_when: "'has been added' in prometheus_repo.stdout"

- name: 🔄 Actualizar repositorios de Helm
  ansible.builtin.command: helm repo update
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"

- name: 🔍 Verificar si Prometheus está desplegado
  kubernetes.core.k8s_info:
    kubeconfig: "/home/victory/.kube/config"
    kind: Deployment
    namespace: monitoring
    name: prometheus-server
  register: prometheus_info
  failed_when: false

- name: 📁 Crear carpeta temporal para manifiestos
  ansible.builtin.file:
    path: /tmp/prometheus_manifests
    state: directory
    mode: '0755'

- name: 📝 Renderizar plantilla del PVC de Prometheus
  ansible.builtin.template:
    src: prometheus-pvc.yaml.j2
    dest: /tmp/prometheus_manifests/prometheus-pvc.yaml

- name: 📦 Aplicar PVC de Prometheus
  ansible.builtin.command: kubectl apply -f /tmp/prometheus_manifests/prometheus-pvc.yaml -n monitoring
  environment:
    KUBECONFIG: "/home/victory/.kube/config"

- name: 🚀 Instalar Prometheus vía Helm (si no existe)
  kubernetes.core.helm:
    kubeconfig: "/home/victory/.kube/config"
    chart_ref: prometheus-community/prometheus
    name: prometheus
    release_namespace: monitoring
    create_namespace: false
    values:
      server:
        persistentVolume:
          enabled: true
          existingClaim: prometheus-pvc
    state: present
  when: prometheus_info.resources | length == 0
  register: prometheus_helm

- name: ✅ Confirmar que Prometheus ya está instalado
  debug:
    msg: "✅ Prometheus ya está instalado."
  when: prometheus_info.resources | length > 0

- name: 🧾 Renderizar archivo extraScrapeConfigs.yaml con nodos externos
  ansible.builtin.template:
    src: extraScrapeConfigs.yaml.j2
    dest: /tmp/prometheus_manifests/extraScrapeConfigs.yaml

- name: 🔐 Crear o actualizar Secret con extraScrapeConfigs.yaml
  ansible.builtin.command: >
    kubectl create secret generic prometheus-additional-scrape-configs
    --from-file=extraScrapeConfigs.yaml=/tmp/prometheus_manifests/extraScrapeConfigs.yaml
    --namespace monitoring --dry-run=client -o yaml |
    kubectl apply -f -
  environment:
    KUBECONFIG: "/home/victory/.kube/config"