
# roles/prometheus/tasks/main.yml

# 1️⃣ Crear namespace 'monitoring' si no existe usando kubectl
- name: 🔍 Verificar si existe namespace monitoring
  command: /usr/local/bin/kubectl get namespace monitoring
  register: ns_monitoring_status
  failed_when: false
  changed_when: false
  environment:
    KUBECONFIG: "/home/victory/.kube/config"

- name: 📥 Crear namespace monitoring si no existe
  command: /usr/local/bin/kubectl create namespace monitoring
  when: ns_monitoring_status.rc != 0
  environment:
    KUBECONFIG: "/home/victory/.kube/config"
  register: ns_create_result
  changed_when: "'created' in ns_create_result.stdout"

# 2️⃣ Añadir repositorio prometheus-community si no existe
- name: 🔗 Añadir repositorio prometheus-community si no existe
  command: /usr/local/bin/helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"
  register: add_repo_result
  failed_when: add_repo_result.rc != 0 and 'exists' not in add_repo_result.stderr
  changed_when: "'has been added' in add_repo_result.stdout"

# 3️⃣ Actualizar repositorios de Helm
- name: 🔄 Actualizar repositorios de Helm
  command: /usr/local/bin/helm repo update
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"

# 4️⃣ Verificar si el deployment de Prometheus ya existe
- name: 🔍 Verificar si el deployment de Prometheus existe
  command: /usr/local/bin/kubectl get deployment prometheus-server -n monitoring
  register: prometheus_deployment_status
  failed_when: false
  changed_when: false
  environment:
    KUBECONFIG: "/home/victory/.kube/config"

# 5️⃣ Crear carpeta temporal para manifiestos de Prometheus si no existe
- name: 📁 Crear carpeta temporal para manifiestos de Prometheus
  file:
    path: /tmp/prometheus_manifests
    state: directory
    mode: '0755'

# 6️⃣ Renderizar plantilla del PVC de Prometheus
- name: 📝 Renderizar plantilla del PVC de Prometheus
  template:
    src: prometheus-pvc.yaml.j2
    dest: /tmp/prometheus_manifests/prometheus-pvc.yaml

# 7️⃣ Aplicar PVC de Prometheus vía kubectl
- name: 📦 Aplicar PVC de Prometheus vía kubectl
  command: /usr/local/bin/kubectl apply -f /tmp/prometheus_manifests/prometheus-pvc.yaml -n monitoring
  environment:
    KUBECONFIG: "/home/victory/.kube/config"

# 8️⃣ Instalar Prometheus vía Helm (si no está instalado aún)
- name: 🚀 Instalar Prometheus vía Helm si no está instalado
  command: >
    /usr/local/bin/helm install prometheus prometheus-community/prometheus
    --namespace monitoring
    --set server.persistentVolume.enabled=true
    --set server.persistentVolume.existingClaim=prometheus-pvc
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"
    KUBECONFIG: "/home/victory/.kube/config"
  args:
    chdir: /tmp
  register: install_prometheus_result
  when: prometheus_deployment_status.rc != 0
  changed_when: "'STATUS: deployed' in install_prometheus_result.stdout"

# 9️⃣ Mostrar salida de la instalación de Prometheus
- name: 📜 Mostrar salida de instalación Helm Prometheus
  debug:
    msg: "{{ install_prometheus_result.stdout }}"
  when: prometheus_deployment_status.rc != 0

# 🔟 Mostrar mensaje si Prometheus ya está instalado
- name: ✅ Mostrar que Prometheus ya está instalado
  debug:
    msg: "✅ Prometheus ya estaba instalado. No se realizó una nueva instalación."
  when: prometheus_deployment_status.rc == 0