---
# uninstall_stack.yml
# 🧼 Playbook para eliminar por completo Prometheus + Grafana + namespace

- name: 🧼 Eliminar stack de monitoreo (Prometheus + Grafana)
  hosts: controller
  become: true
  gather_facts: false
  environment:
    KUBECONFIG: "/home/victory/.kube/config"

  vars:
    namespace: monitoring

  tasks:

    - name: 🔍 Verificar si el namespace '{{ namespace }}' existe
      command: kubectl get namespace {{ namespace }}
      register: ns_check
      failed_when: false
      changed_when: false

    - name: ❌ Desinstalar Prometheus con Helm
      command: helm uninstall prometheus -n {{ namespace }}
      when: ns_check.rc == 0
      ignore_errors: true

    - name: ❌ Desinstalar Grafana con Helm
      command: helm uninstall grafana -n {{ namespace }}
      when: ns_check.rc == 0
      ignore_errors: true

    - name: 🧽 Eliminar todos los recursos comunes del namespace
      shell: |
        kubectl delete pvc,svc,pod,secret,configmap --all -n {{ namespace }} --ignore-not-found=true
      when: ns_check.rc == 0
      ignore_errors: true

    - name: ❌ Eliminar namespace '{{ namespace }}'
      command: kubectl delete namespace {{ namespace }} --ignore-not-found=true
      when: ns_check.rc == 0
      ignore_errors: true

    - name: 💤 Esperar a que namespace entre en terminación (si aplica)
      pause:
        seconds: 10
      when: ns_check.rc == 0

    - name: 📦 Verificar si jq está instalado para eliminar finalizers
      command: which jq
      register: jq_check
      failed_when: jq_check.rc != 0
      changed_when: false

    - name: 🛠 Forzar eliminación de finalizers si el namespace sigue colgado
      shell: |
        kubectl get namespace {{ namespace }} -o json \
        | jq 'del(.spec.finalizers)' \
        | kubectl replace --raw "/api/v1/namespaces/{{ namespace }}/finalize" -f -
      when:
        - ns_check.rc == 0
        - final_check.rc == 0
        - jq_check.rc == 0
      ignore_errors: true
      register: force_delete

    - name: ✅ Verificar que el namespace fue eliminado
      shell: kubectl get namespace {{ namespace }}
      register: final_check
      failed_when: false
      changed_when: false

    - name: ✅ Confirmación de limpieza completa
      debug:
        msg: "🧽 Stack de monitoreo y namespace '{{ namespace }}' eliminados correctamente."
      when: final_check.rc != 0

    - name: ⚠️ El namespace sigue existiendo
      debug:
        msg: "🚨 Atención: El namespace '{{ namespace }}' aún existe. Revisa CRDs o finalizers manualmente."
      when: final_check.rc == 0