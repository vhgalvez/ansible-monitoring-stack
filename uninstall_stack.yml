---
# üßº uninstall_stack.yml
# Desinstala completamente el stack de monitoreo: Helm releases, PVCs, Pods, Servicios, Namespace y recursos de Longhorn

- name: üßº Eliminar stack de monitoreo (Grafana + Prometheus)
  hosts: controller
  become: yes
  gather_facts: false
  environment:
    KUBECONFIG: "/home/victory/.kube/config"

  vars:
    namespace: monitoring

  tasks:
    # Verificar existencia del namespace
    - name: üîç Verificar existencia del namespace "{{ namespace }}"
      command: kubectl get namespace {{ namespace }}
      register: ns_check
      failed_when: false
      changed_when: false

    # Desinstalar Prometheus con Helm
    - name: ‚ùå Desinstalar Prometheus con Helm
      command: helm uninstall prometheus -n {{ namespace }}
      when: ns_check.rc == 0
      register: uninstall_prometheus
      failed_when: false
      changed_when: "'release \"prometheus\" uninstalled' in uninstall_prometheus.stdout"

    # Desinstalar Grafana con Helm
    - name: ‚ùå Desinstalar Grafana con Helm
      command: helm uninstall grafana -n {{ namespace }}
      when: ns_check.rc == 0
      register: uninstall_grafana
      failed_when: false
      changed_when: "'release \"grafana\" uninstalled' in uninstall_grafana.stdout"

    # Eliminar PVCs de Grafana y Prometheus
    - name: üßπ Eliminar PVCs de Grafana y Prometheus
      command: kubectl delete pvc grafana-pvc prometheus-pvc -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    # Eliminar PVCs de Longhorn con label app=longhorn
    - name: üßº Eliminar PVCs de Longhorn con label app=longhorn
      command: kubectl delete pvc -l app=longhorn -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    # Eliminar servicios de Prometheus si existen
    - name: ‚ùå Eliminar servicios de Prometheus si existen
      command: >
        kubectl delete service
        prometheus-server
        prometheus-alertmanager
        prometheus-kube-state-metrics
        prometheus-node-exporter
        prometheus-pushgateway -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    # Eliminar servicios de Grafana si existen
    - name: ‚ùå Eliminar servicios de Grafana si existen
      command: kubectl delete service grafana -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    # Verificar si los servicios de Prometheus fueron eliminados
    - name: Verificar si los servicios de Prometheus fueron eliminados
      command: kubectl get service prometheus-server -n {{ namespace }}
      register: prometheus_server_check
      failed_when: prometheus_server_check.rc == 0
      changed_when: false

    # Verificar si los servicios de Grafana fueron eliminados
    - name: Verificar si los servicios de Grafana fueron eliminados
      command: kubectl get service grafana -n {{ namespace }}
      register: grafana_check
      failed_when: grafana_check.rc == 0
      changed_when: false

    # Eliminar Pods de Grafana y Prometheus
    - name: ‚ùå Eliminar Pods de Grafana y Prometheus
      command: kubectl delete pod -l app in (grafana,prometheus) -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    # Eliminar namespace si existe
    - name: üß® Eliminar namespace "{{ namespace }}"
      command: kubectl delete namespace {{ namespace }}
      when: ns_check.rc == 0
      register: ns_delete
      failed_when: false

    # Confirmaci√≥n de limpieza completa
    - name: ‚úÖ Confirmaci√≥n de limpieza completa
      debug:
        msg: "üßΩ Stack de monitoreo eliminado correctamente."
      when: ns_check.rc == 0

    # Namespace no exist√≠a previamente
    - name: ‚ÑπÔ∏è Namespace no exist√≠a previamente
      debug:
        msg: "‚úÖ El namespace '{{ namespace }}' no existe o ya fue eliminado."
      when: ns_check.rc != 0