# uninstall_stack.yml
---
# üßº uninstall_stack.yml
# Desinstalaci√≥n completa del stack de monitoreo (Prometheus + Grafana) y sus recursos asociados

- name: üßº Eliminar stack de monitoreo (Prometheus + Grafana)
  hosts: controller
  become: true
  gather_facts: false
  environment:
    KUBECONFIG: "/home/victory/.kube/config"

  vars:
    namespace: monitoring
    temp_file: /tmp/force_delete_ns.json

  tasks:

    - name: üîç Verificar si el namespace '{{ namespace }}' existe
      command: kubectl get namespace {{ namespace }}
      register: ns_check
      failed_when: false
      changed_when: false

    - name: ‚ùå Desinstalar Prometheus con Helm
      command: helm uninstall prometheus -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    - name: ‚ùå Desinstalar Grafana con Helm
      command: helm uninstall grafana -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    - name: üßπ Eliminar todos los PVCs del namespace
      command: kubectl delete pvc --all -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    - name: ‚ùå Eliminar todos los servicios del namespace
      command: kubectl delete svc --all -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    - name: ‚ùå Eliminar todos los pods del namespace
      command: kubectl delete pod --all -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    - name: ‚ùå Eliminar ConfigMaps y Secrets
      command: kubectl delete secret --all -n {{ namespace }}
      when: ns_check.rc == 0
      failed_when: false
      ignore_errors: true

    - name: ‚ùå Eliminar namespace '{{ namespace }}'
      command: kubectl delete namespace {{ namespace }}
      when: ns_check.rc == 0
      register: ns_delete
      failed_when: false
      changed_when: ns_delete.rc == 0

    - name: ‚è≥ Esperar 10 segundos antes de verificar finalizers
      pause:
        seconds: 10
      when: ns_check.rc == 0

    - name: üõ† Forzar eliminaci√≥n si namespace sigue colgado (finalizers)
      shell: |
        kubectl get namespace {{ namespace }} -o json | \
        jq 'del(.spec.finalizers)' > {{ temp_file }} && \
        kubectl replace --raw "/api/v1/namespaces/{{ namespace }}/finalize" -f {{ temp_file }}
      when: ns_check.rc == 0
      ignore_errors: true
      register: force_ns_cleanup

    - name: ‚úÖ Confirmaci√≥n de limpieza completa
      debug:
        msg: "üßΩ Stack de monitoreo eliminado correctamente."
      when: ns_check.rc == 0

    - name: ‚ÑπÔ∏è El namespace '{{ namespace }}' no exist√≠a
      debug:
        msg: "‚úÖ El namespace '{{ namespace }}' no existe o ya fue eliminado."
      when: ns_check.rc != 0